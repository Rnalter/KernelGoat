"use strict";(self.webpackChunkguide=self.webpackChunkguide||[]).push([[4347],{3415:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/KernelGoat/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"\ud83d\udcaa Why - The Motivation","href":"/KernelGoat/docs/\ud83d\udcaa Why - The Motivation","docId":"\ud83d\udcaa Why - The Motivation","unlisted":false},{"type":"category","label":"Vulnerabilities","items":[{"type":"link","label":"Null Pointer Dereference","href":"/KernelGoat/docs/Vulnerabilities/NullPointerDereference","docId":"Vulnerabilities/NullPointerDereference","unlisted":false},{"type":"link","label":"Understanding Use-After-Free (UAF)","href":"/KernelGoat/docs/Vulnerabilities/Use-After-Free","docId":"Vulnerabilities/Use-After-Free","unlisted":false},{"type":"link","label":"Heap Overflow","href":"/KernelGoat/docs/Vulnerabilities/heap_overflow","docId":"Vulnerabilities/heap_overflow","unlisted":false},{"type":"link","label":"Integer Overflow","href":"/KernelGoat/docs/Vulnerabilities/integer_overflow","docId":"Vulnerabilities/integer_overflow","unlisted":false},{"type":"link","label":"Stack Buffer Overflow","href":"/KernelGoat/docs/Vulnerabilities/stack_overflow","docId":"Vulnerabilities/stack_overflow","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"\ud83d\udcaa Why - The Motivation":{"id":"\ud83d\udcaa Why - The Motivation","title":"\ud83d\udcaa Why - The Motivation","description":"\ud83d\udcaa Why - The Motivation","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Welcome to KernelGoat, a purpose-built learning platform for understanding and experimenting with common vulnerabilities in Linux kernel modules. This project is designed for security researchers, enthusiasts, and students to gain hands-on experience in exploiting and analyzing kernel vulnerabilities in a controlled environment.","sidebar":"tutorialSidebar"},"Vulnerabilities/heap_overflow":{"id":"Vulnerabilities/heap_overflow","title":"Heap Overflow","description":"Introduction","sidebar":"tutorialSidebar"},"Vulnerabilities/integer_overflow":{"id":"Vulnerabilities/integer_overflow","title":"Integer Overflow","description":"Introduction","sidebar":"tutorialSidebar"},"Vulnerabilities/NullPointerDereference":{"id":"Vulnerabilities/NullPointerDereference","title":"Null Pointer Dereference","description":"Introduction","sidebar":"tutorialSidebar"},"Vulnerabilities/stack_overflow":{"id":"Vulnerabilities/stack_overflow","title":"Stack Buffer Overflow","description":"Introduction","sidebar":"tutorialSidebar"},"Vulnerabilities/Use-After-Free":{"id":"Vulnerabilities/Use-After-Free","title":"Understanding Use-After-Free (UAF)","description":"Introduction","sidebar":"tutorialSidebar"}}}}')}}]);